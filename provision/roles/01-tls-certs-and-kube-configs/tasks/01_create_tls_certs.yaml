---

- name: Create the /etc/ssl/kthw/crt directory
  file:
    path: /etc/ssl/kthw/crt
    state: directory
    mode: '0755'

- name: Create the /etc/ssl/kthw/csr directory
  file: 
    path: /etc/ssl/kthw/csr
    state: directory
    mode: '0755'

- name: Create the /etc/ssl/kthw/private directory
  file:
    path: /etc/ssl/kthw/private
    state: directory
    mode: '0755'

- name: Create private key (RSA, 2048 bits)
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/ca.key
    size: 2048

- name: Create certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/ca.key
    subject_ordered:
    - CN: "KUBERNETES-CA"
    - O: "Kubernetes"
    basic_constraints:
    - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
    - keyCertSign
    key_usage_critical: true
  check_mode: false
  register: ca_csr

- name: Create self-signed certificate from CSR
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/ca.crt
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: /etc/ssl/kthw/private/ca.key
    provider: selfsigned
    selfsigned_not_after: "+1000d"

- name: Generate a private key for the admin user
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/admin.key
    size: 2048

- name: Generate the CSR for the admin user. 
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/admin.key
    subject_ordered:
    - CN: "admin"
    - O: "system:masters"
    key_usage:
    - keyCertSign
    key_usage_critical: true
  check_mode: false
  register: admin_csr

- name: Sign certificate for admin user using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/admin.crt
    csr_content: "{{ admin_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the Kube Controller Manager
  openssl_privatekey:
    path: /etc/ssl/kthw/private/kube-controller-manager.key
    size: 2048

- name: Generate the CSR for the Kube Controller Manager
  community.crypto.openssl_csr_pipe:    
    privatekey_path: /etc/ssl/kthw/private/kube-controller-manager.key
    subject_ordered:
    - CN: "system:kube-controller-manager"
    - O: "system:kube-controller-manager"
    key_usage:
    - keyCertSign
    key_usage_critical: true
  check_mode: false
  register: kcm_csr

- name: Sign certficate for Kube Controller Manager using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/kube-controller-manager.crt
    csr_content: "{{ kcm_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the Kube Proxy
  community.crypto.openssl_privatekey: 
    path: /etc/ssl/kthw/private/kube-proxy.key
    size: 2048

- name: Generate the CSR for the Kube Proxy
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/kube-proxy.key
    subject_ordered:
    - CN: "system:kube-proxy"
    - O: "system:node-proxier"
    key_usage:
    - keyCertSign
    key_usage_critical: true
  check_mode: false
  register: kp_csr

- name: Sign certificate for the Kube Proxy using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/kube-proxy.crt
    csr_content: "{{ kp_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"
    
- name: Generate a private key for the Kube Scheduler 
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/kube-scheduler.key
    size: 2048

- name: Generate the CSR for the Kube Scheduler
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/kube-scheduler.key
    subject_ordered:
    - CN: "system:kube-scheduler"
    - O: "system:kube-scheduler"
    key_usage:
    - keyCertSign
    key_usage_critical: true
  check_mode: false
  register: ks_csr

- name: Sign certificate for the Kube Scheduler using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/kube-scheduler.crt
    csr_content: "{{ ks_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the Kubernetes API Server
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/kube-apiserver.key
    size: 2048

- name: Generate the CSR for the Kubernetes API Server
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/kube-apiserver.key
    subject_ordered:
    - CN: "kube-apiserver"
    - O: "Kubernetes"
    subject_alt_name:
    - "DNS:kubernetes"
    - "DNS:kubernetes.default"
    - "DNS:kubernetes.default.svc"
    - "DNS:kubernetes.default.svc.cluster"
    - "DNS:kubernetes.default.svc.cluster.local"
    - "IP:10.96.0.1"
    - "IP:192.168.56.11"
    - "IP:192.168.56.12"
    - "IP:192.168.56.30"
    - "IP:127.0.0.1"
    basic_constraints:
    - 'CA:FALSE'
    basic_constraints_critical: true
    key_usage:
    - nonRepudiation
    - digitalSignature
    - keyEncipherment
    extended_key_usage:
    - serverAuth
    key_usage_critical: true
  check_mode: false
  register: kas_csr

- name: Sign certificate for the Kubernetes API Server using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/kube-apiserver.crt
    csr_content: "{{ kas_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the Kubelet Client Certificate
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/apiserver-kubelet-client.key
    size: 2048

- name: Generate the CSR for the Kubelet Client Certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/apiserver-kubelet-client.key
    subject_ordered:
    - CN: "kube-apiserver-kubelet-client"
    - O: "system:masters"
    basic_constraints:
    - 'CA:FALSE'
    basic_constraints_critical: true
    key_usage:
    - nonRepudiation
    - digitalSignature
    - keyEncipherment
    extended_key_usage:
    - clientAuth
    key_usage_critical: true
  check_mode: false
  register: kc_csr

- name: Sign client certificate for the Kubelet client using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/apiserver-kubelet-client.crt
    csr_content: "{{ kc_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the ETCD Server Certificate
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/etcd-server.key
    size: 2048

- name: Generate the CSR for the ETCD Server Certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/etcd-server.key
    subject_ordered:
    - CN: "etcd-server"
    - O: "Kubernetes"
    subject_alt_name:
    - "IP:192.168.56.11"
    - "IP:192.168.56.12"
    - "IP:127.0.0.1"
    basic_constraints:
    - 'CA:FALSE'
    basic_constraints_critical: true
    key_usage:
    - nonRepudiation
    - digitalSignature
    - keyEncipherment
    key_usage_critical: true
  check_mode: false
  register: etcd_csr

- name: Sign certificate for the ETCD Server using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/etcd-server.crt
    csr_content: "{{ etcd_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

- name: Generate a private key for the Service Account
  community.crypto.openssl_privatekey:
    path: /etc/ssl/kthw/private/service-account.key
    size: 2048 

- name: Generate the CSR for the Service Account
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/kthw/private/service-account.key
    subject_ordered:
    - CN: "service-accounts"
    - O: "Kubernetes"
  check_mode: false
  register: sa_csr

- name: Sign certificate for the Service Account using CA server's private key
  community.crypto.x509_certificate:
    path: /etc/ssl/kthw/crt/service-account.crt
    csr_content: "{{ sa_csr.csr }}"
    provider: ownca
    ownca_path: /etc/ssl/kthw/crt/ca.crt
    ownca_privatekey_path: /etc/ssl/kthw/private/ca.key
    ownca_not_after: "+1000d"

...