---

- name: Generate Kubernetes Configuration Files for Authentication
  hosts:
  - jumpbox      

  tasks:
  - name: Create the /kubeconfigs directory
    file:
      path: /kubeconfigs
      state: directory
      mode: '0755'

  - name: The kube-proxy Kubernetes configuation file
    template:
      src: templates/kubeconfig.j2
      dest: "/kubeconfigs/{{ item.config_file_name }}"
    loop: 
    - config_file_name: "kube-proxy.kubeconfig"
      server: "192.168.56.30"
      user: "system:kube-proxy"
      certificate_authority_field: "certificate-authority"
      certificate_authority: "/var/lib/kubernetes/pki/ca.crt"
      client_certificate_field: "client-certificate"
      client_certificate: "/var/lib/kubernetes/pki/kube-proxy.crt"
      client_key_field: "client-key"
      client_key: "/var/lib/kubernetes/pki/kube-proxy.key"
    - config_file_name: "kube-controller-manager.kubeconfig"
      server: "127.0.0.1"
      user: "system:kube-controller-manager"
      certificate_authority_field: "certificate-authority"
      certificate_authority: "/var/lib/kubernetes/pki/ca.crt"
      client_certificate_field: "client-certificate"
      client_certificate: /var/lib/kubernetes/pki/kube-controller-manager.crt
      client_key_field: "client-key"
      client_key: /var/lib/kubernetes/pki/kube-controller-manager.key    
    - config_file_name: "kube-scheduler.kubeconfig"
      server: "127.0.0.1"
      user: "system:kube-scheduler"
      certificate_authority_field: "certificate-authority"
      certificate_authority: "/var/lib/kubernetes/pki/ca.crt"
      client_certificate_field: "client-certificate"
      client_certificate: /var/lib/kubernetes/pki/kube-scheduler.crt
      client_key_field: "client-key"
      client_key: /var/lib/kubernetes/pki/kube-scheduler.key
    # - config_file_name: "admin.kubeconfig"
    #   server: "127.0.0.1"
    #   user: "admin"
    #   certificate_authority_field: "certificate-authority"
    #   certificate_authority: "{{ lookup('ansible.builtin.file', '/etc/ssl/kthw/crt/ca.crt') | b64encode }}"
    #   client_certificate_field: "client-certificate"
    #   client_certificate: "{{ lookup('ansible.builtin.file', '/etc/ssl/kthw/crt/admin.crt') | b64encode }}"
    #   client_key_field: "client-key-data"
    #   client_key: "{{ admin_key.stdout | b64encode }}"

- name: Distribute the kubeconfigs
  hosts: 
  - controlplane
  vars:
    kubeconfig_names:
    - "kube-proxy"
    - "kube-controller-manager"
    - "kube-scheduler"
        
  tasks:

  - name: Copy the kubeconfigs to the hosts
    copy:
      src: "/kubeconfigs/{{item}}.kubeconfig"
      dest: "/home/vagrant/{{item}}.kubeconfig"
    loop: "{{ kubeconfig_names }}"

...

